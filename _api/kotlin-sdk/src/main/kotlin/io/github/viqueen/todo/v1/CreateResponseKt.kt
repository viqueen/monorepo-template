// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: todo/v1/todo_service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.github.viqueen.todo.v1;

@kotlin.jvm.JvmName("-initializecreateResponse")
public inline fun createResponse(block: io.github.viqueen.todo.v1.CreateResponseKt.Dsl.() -> kotlin.Unit): io.github.viqueen.todo.v1.CreateResponse =
  io.github.viqueen.todo.v1.CreateResponseKt.Dsl._create(io.github.viqueen.todo.v1.CreateResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `todo.v1.CreateResponse`
 */
public object CreateResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.github.viqueen.todo.v1.CreateResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.github.viqueen.todo.v1.CreateResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.github.viqueen.todo.v1.CreateResponse = _builder.build()

    /**
     * `.todo.v1.Todo todo = 1 [json_name = "todo"];`
     */
    public var todo: io.github.viqueen.todo.v1.Todo
      @JvmName("getTodo")
      get() = _builder.getTodo()
      @JvmName("setTodo")
      set(value) {
        _builder.setTodo(value)
      }
    /**
     * `.todo.v1.Todo todo = 1 [json_name = "todo"];`
     */
    public fun clearTodo() {
      _builder.clearTodo()
    }
    /**
     * `.todo.v1.Todo todo = 1 [json_name = "todo"];`
     * @return Whether the todo field is set.
     */
    public fun hasTodo(): kotlin.Boolean {
      return _builder.hasTodo()
    }
    public val CreateResponseKt.Dsl.todoOrNull: io.github.viqueen.todo.v1.Todo?
      get() = _builder.todoOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.github.viqueen.todo.v1.CreateResponse.copy(block: `io.github.viqueen.todo.v1`.CreateResponseKt.Dsl.() -> kotlin.Unit): io.github.viqueen.todo.v1.CreateResponse =
  `io.github.viqueen.todo.v1`.CreateResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.github.viqueen.todo.v1.CreateResponseOrBuilder.todoOrNull: io.github.viqueen.todo.v1.Todo?
  get() = if (hasTodo()) getTodo() else null

