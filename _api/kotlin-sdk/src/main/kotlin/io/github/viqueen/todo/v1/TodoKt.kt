// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: todo/v1/models.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.github.viqueen.todo.v1;

@kotlin.jvm.JvmName("-initializetodo")
public inline fun todo(block: io.github.viqueen.todo.v1.TodoKt.Dsl.() -> kotlin.Unit): io.github.viqueen.todo.v1.Todo =
  io.github.viqueen.todo.v1.TodoKt.Dsl._create(io.github.viqueen.todo.v1.Todo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `todo.v1.Todo`
 */
public object TodoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.github.viqueen.todo.v1.Todo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.github.viqueen.todo.v1.Todo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.github.viqueen.todo.v1.Todo = _builder.build()

    /**
     * `string id = 1 [json_name = "id"];`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `string id = 1 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `string description = 2 [json_name = "description"];`
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.getDescription()
      @JvmName("setDescription")
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * `string description = 2 [json_name = "description"];`
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * `bool completed = 3 [json_name = "completed"];`
     */
    public var completed: kotlin.Boolean
      @JvmName("getCompleted")
      get() = _builder.getCompleted()
      @JvmName("setCompleted")
      set(value) {
        _builder.setCompleted(value)
      }
    /**
     * `bool completed = 3 [json_name = "completed"];`
     */
    public fun clearCompleted() {
      _builder.clearCompleted()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.github.viqueen.todo.v1.Todo.copy(block: `io.github.viqueen.todo.v1`.TodoKt.Dsl.() -> kotlin.Unit): io.github.viqueen.todo.v1.Todo =
  `io.github.viqueen.todo.v1`.TodoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

