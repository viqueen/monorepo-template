// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: todo/v1/todo_service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.github.viqueen.todo.v1;

@kotlin.jvm.JvmName("-initializereadRequest")
public inline fun readRequest(block: io.github.viqueen.todo.v1.ReadRequestKt.Dsl.() -> kotlin.Unit): io.github.viqueen.todo.v1.ReadRequest =
  io.github.viqueen.todo.v1.ReadRequestKt.Dsl._create(io.github.viqueen.todo.v1.ReadRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `todo.v1.ReadRequest`
 */
public object ReadRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.github.viqueen.todo.v1.ReadRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.github.viqueen.todo.v1.ReadRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.github.viqueen.todo.v1.ReadRequest = _builder.build()

    /**
     * `string id = 1 [json_name = "id"];`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `string id = 1 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.github.viqueen.todo.v1.ReadRequest.copy(block: `io.github.viqueen.todo.v1`.ReadRequestKt.Dsl.() -> kotlin.Unit): io.github.viqueen.todo.v1.ReadRequest =
  `io.github.viqueen.todo.v1`.ReadRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

