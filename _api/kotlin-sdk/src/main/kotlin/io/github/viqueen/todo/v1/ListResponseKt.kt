// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: todo/v1/todo_service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.github.viqueen.todo.v1;

@kotlin.jvm.JvmName("-initializelistResponse")
public inline fun listResponse(block: io.github.viqueen.todo.v1.ListResponseKt.Dsl.() -> kotlin.Unit): io.github.viqueen.todo.v1.ListResponse =
  io.github.viqueen.todo.v1.ListResponseKt.Dsl._create(io.github.viqueen.todo.v1.ListResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `todo.v1.ListResponse`
 */
public object ListResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.github.viqueen.todo.v1.ListResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.github.viqueen.todo.v1.ListResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.github.viqueen.todo.v1.ListResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TodosProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .todo.v1.Todo todos = 1 [json_name = "todos"];`
     */
     public val todos: com.google.protobuf.kotlin.DslList<io.github.viqueen.todo.v1.Todo, TodosProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTodosList()
      )
    /**
     * `repeated .todo.v1.Todo todos = 1 [json_name = "todos"];`
     * @param value The todos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTodos")
    public fun com.google.protobuf.kotlin.DslList<io.github.viqueen.todo.v1.Todo, TodosProxy>.add(value: io.github.viqueen.todo.v1.Todo) {
      _builder.addTodos(value)
    }
    /**
     * `repeated .todo.v1.Todo todos = 1 [json_name = "todos"];`
     * @param value The todos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTodos")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.github.viqueen.todo.v1.Todo, TodosProxy>.plusAssign(value: io.github.viqueen.todo.v1.Todo) {
      add(value)
    }
    /**
     * `repeated .todo.v1.Todo todos = 1 [json_name = "todos"];`
     * @param values The todos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTodos")
    public fun com.google.protobuf.kotlin.DslList<io.github.viqueen.todo.v1.Todo, TodosProxy>.addAll(values: kotlin.collections.Iterable<io.github.viqueen.todo.v1.Todo>) {
      _builder.addAllTodos(values)
    }
    /**
     * `repeated .todo.v1.Todo todos = 1 [json_name = "todos"];`
     * @param values The todos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTodos")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.github.viqueen.todo.v1.Todo, TodosProxy>.plusAssign(values: kotlin.collections.Iterable<io.github.viqueen.todo.v1.Todo>) {
      addAll(values)
    }
    /**
     * `repeated .todo.v1.Todo todos = 1 [json_name = "todos"];`
     * @param index The index to set the value at.
     * @param value The todos to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTodos")
    public operator fun com.google.protobuf.kotlin.DslList<io.github.viqueen.todo.v1.Todo, TodosProxy>.set(index: kotlin.Int, value: io.github.viqueen.todo.v1.Todo) {
      _builder.setTodos(index, value)
    }
    /**
     * `repeated .todo.v1.Todo todos = 1 [json_name = "todos"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTodos")
    public fun com.google.protobuf.kotlin.DslList<io.github.viqueen.todo.v1.Todo, TodosProxy>.clear() {
      _builder.clearTodos()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.github.viqueen.todo.v1.ListResponse.copy(block: `io.github.viqueen.todo.v1`.ListResponseKt.Dsl.() -> kotlin.Unit): io.github.viqueen.todo.v1.ListResponse =
  `io.github.viqueen.todo.v1`.ListResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

