// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: todo/admin/v1/admin_todo_service.proto

package todoAdminV1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	AdminTodoService_ListTodos_FullMethodName = "/todo.admin.v1.AdminTodoService/ListTodos"
)

// AdminTodoServiceClient is the client API for AdminTodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdminTodoServiceClient interface {
	ListTodos(ctx context.Context, in *ListTodosRequest, opts ...grpc.CallOption) (*ListTodosResponse, error)
}

type adminTodoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminTodoServiceClient(cc grpc.ClientConnInterface) AdminTodoServiceClient {
	return &adminTodoServiceClient{cc}
}

func (c *adminTodoServiceClient) ListTodos(ctx context.Context, in *ListTodosRequest, opts ...grpc.CallOption) (*ListTodosResponse, error) {
	out := new(ListTodosResponse)
	err := c.cc.Invoke(ctx, AdminTodoService_ListTodos_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminTodoServiceServer is the server API for AdminTodoService service.
// All implementations must embed UnimplementedAdminTodoServiceServer
// for forward compatibility
type AdminTodoServiceServer interface {
	ListTodos(context.Context, *ListTodosRequest) (*ListTodosResponse, error)
	mustEmbedUnimplementedAdminTodoServiceServer()
}

// UnimplementedAdminTodoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAdminTodoServiceServer struct {
}

func (UnimplementedAdminTodoServiceServer) ListTodos(context.Context, *ListTodosRequest) (*ListTodosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTodos not implemented")
}
func (UnimplementedAdminTodoServiceServer) mustEmbedUnimplementedAdminTodoServiceServer() {}

// UnsafeAdminTodoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdminTodoServiceServer will
// result in compilation errors.
type UnsafeAdminTodoServiceServer interface {
	mustEmbedUnimplementedAdminTodoServiceServer()
}

func RegisterAdminTodoServiceServer(s grpc.ServiceRegistrar, srv AdminTodoServiceServer) {
	s.RegisterService(&AdminTodoService_ServiceDesc, srv)
}

func _AdminTodoService_ListTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTodosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminTodoServiceServer).ListTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminTodoService_ListTodos_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminTodoServiceServer).ListTodos(ctx, req.(*ListTodosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AdminTodoService_ServiceDesc is the grpc.ServiceDesc for AdminTodoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdminTodoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "todo.admin.v1.AdminTodoService",
	HandlerType: (*AdminTodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTodos",
			Handler:    _AdminTodoService_ListTodos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo/admin/v1/admin_todo_service.proto",
}
